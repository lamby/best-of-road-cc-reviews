#!/usr/bin/env python

import sys
import jinja2
import urllib

from lxml.html import parse, tostring
from lxml.cssselect import CSSSelector

BASE_URL = 'http://road.cc'

TEMPLATE = """
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Best of road.cc reviews</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet">
  </head>
  <body>
    <div class="container">
    <br>
      <div class="jumbotron">
        <h1>Best of road.cc reviews</h1>
        <p class="lead">Skip to the best items.</p>
        <p><a class="btn btn-lg btn-primary" href="http://road.cc/review-archive" role="button">View all road.cc reviews</a></p>
      </div>

      {% for parent_title, parent in reviews %}
      <h1 class="page-header">
        {{ parent_title }}
      </h1>

      {% for child_title, child in parent %}
        <h3>{{ child_title }}</h3>

        {% for review in child|sort(attribute='price')  %}
        <li>
          <a href="{{ review.url }}">{{ review.title }}</a>
          &pound;{{ "%.2f"|format(review.price) }}
          </li>
        {% endfor %}
      {% endfor %}
     {% endfor %}
    </div>
  </body>
</html>
"""

def main():
    print generate_html(get_reviews()).encode('utf-8')

    return 0

def get_reviews():
    root = GET('/review-archive')

    result = []

    for x in findall(root, '#block-roadcc_blocks-review_taxonomy .fieldset'):
        row = []

        for y in findall(x, 'li a'):
            section = get_section(y.get('href'))

            if section:
                row.append((y.text, section))

        result.append((find(x, '.fieldset-title').text, row))

    return result

def get_section(url):
    root = GET(url)

    result = []

    for x in findall(root, '.review-archive'):
        stars = find(x, '.review-stars img').get('src')
        rating = int(stars.split('-', 1)[1].split('.')[0])

        if rating < 9:
            continue

        title = find(x, '.review-title a')

        result.append({
            'url': '%s%s' % (BASE_URL, title.get('href')),
            'title': title.text,
            'price': float(find(x, '.review-price').text[1:]),
            'rating': rating,
        })

    return result

def GET(suffix):
    url = '%s%s' % (BASE_URL, suffix)

    print >>sys.stderr, "I: Downloading %s" % url

    return parse(urllib.urlopen(url))

def findall(elem, selector):
    return CSSSelector(selector)(elem)

def find(elem, selector):
    return findall(elem, selector)[0]

def generate_html(reviews):
    return jinja2.Template(TEMPLATE.strip()).render(reviews=reviews)

if __name__ == '__main__':
    sys.exit(main())
